Sub Test()
    Dim myItem As Outlook.MailItem
    Dim olTsk As Outlook.TaskItem
    
    Set myItem = ActiveExplorer.Selection.Item(1)
    
    'To Move an item programmatically, this does not help the EntryID problem
    'Since we get the myItem before moving and it returns us the old EntryID
    'Set ns = Application.GetNamespace("MAPI")
    'Dim moveToFolder As Outlook.MAPIFolder
    'Set moveToFolder = ns.Folders("ozgur.yuksel@lmsintl.com").Folders("Inbox").Folders("Processed")
    'myItem.Move moveToFolder
    
    Set olTsk = CreateItem(olTaskItem)
     
    With olTsk
        .Subject = myItem.Subject
        '.StartDate = Now()
        .Body = .Body & vbCrLf & "=== SOURCE E-MAIL INFORMATION ==="
        .Body = .Body & vbCrLf & "Subject: " & myItem.Subject
        .Body = .Body & vbCrLf & "From: " & myItem.Sender
        .Body = .Body & vbCrLf & "To: " & myItem.To
        .Body = .Body & vbCrLf & "Sent on: " & myItem.SentOn
        'This EntyID is automatically updated each time myItem is moved from one folder to another
        'So it is not a reliable link. We can move the item to the final destination first and then
        'Start getting the link. This way, at least it is archived it will work
        .Body = .Body & vbCrLf & "url:outlook:" & myItem.EntryID & vbCrLf
        .Save
    End With
     
    Set myItem = Nothing
    olTsk.Display
End Sub


Sub Sandbox()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = ActiveExplorer.Selection.Item(1)
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    
    MsgBox selectedTask.DueDate
    
End Sub


'
' VIEW COMMANDS
'
Sub ShowActionListView()
    ChangeView "GTD Action List"
End Sub

Sub ShowIncubationView()
    ChangeView "GTD Incubation"
End Sub

Sub ShowMasterListView()
    ChangeView "GTD Master List"
End Sub

Sub ShowWaitingForView()
    ChangeView "GTD Waiting for"
End Sub

Sub ShowSimpleListView()
    ChangeView "Simple List"
End Sub


Sub ChangeView(viewName)
    Dim objViews As Views
    Dim objView As View
  
    Set objViews = Application.ActiveExplorer.CurrentFolder.Views
    Set objView = objViews.Item(viewName)
    If objView Is Nothing Then
        MsgBox "This command is valid only in Task folders"
        Exit Sub
    End If
    
    objView.Apply
End Sub


'
' NEW TASK FROM MAIL COMMANDS
'
Sub NewTaskToActionList()
    Dim selectedMail As Outlook.MailItem
    Set selectedMail = GetSelectedMail()
    If selectedMail Is Nothing Then
        MsgBox "You need to select a mail to execute this command"
        Exit Sub
    End If
    
    Dim newTask As Outlook.TaskItem
    Set newTask = CreateTaskForMail(selectedMail)
    If newTask Is Nothing Then
        MsgBox "Sorry, could not create the task for whatever reason"
        Exit Sub
    End If
    AddGivenTaskToActionList newTask
    newTask.Display
End Sub

Sub NewTaskToIncubationList()
    Dim selectedMail As Outlook.MailItem
    Set selectedMail = GetSelectedMail()
    If selectedMail Is Nothing Then
        MsgBox "You need to select a mail to execute this command"
        Exit Sub
    End If
    
    Dim newTask As Outlook.TaskItem
    Set newTask = CreateTaskForMail(selectedMail)
    If newTask Is Nothing Then
        MsgBox "Sorry, could not create the task for whatever reason"
        Exit Sub
    End If
    AddGivenTaskToIncubationList newTask
    newTask.Display
End Sub

Sub NewTaskToMasterList()
    Dim selectedMail As Outlook.MailItem
    Set selectedMail = GetSelectedMail()
    If selectedMail Is Nothing Then
        MsgBox "You need to select a mail to execute this command"
        Exit Sub
    End If
    
    Dim newTask As Outlook.TaskItem
    Set newTask = CreateTaskForMail(selectedMail)
    If newTask Is Nothing Then
        MsgBox "Sorry, could not create the task for whatever reason"
        Exit Sub
    End If
    AddGivenTaskToMasterList newTask
    newTask.Display
End Sub

Sub NewTaskToWaitingForList()
    Dim selectedMail As Outlook.MailItem
    Set selectedMail = GetSelectedMail()
    If selectedMail Is Nothing Then
        MsgBox "You need to select a mail to execute this command"
        Exit Sub
    End If
    
    Dim newTask As Outlook.TaskItem
    Set newTask = CreateTaskForMail(selectedMail)
    If newTask Is Nothing Then
        MsgBox "Sorry, could not create the task for whatever reason"
        Exit Sub
    End If
    AddGivenTaskToWaitingList newTask
    newTask.Display
End Sub

Private Function GetSelectedMail() As Outlook.MailItem
    Dim selected As Outlook.MailItem
    If ActiveExplorer.Selection.Count > 0 Then
        Set selectedItem = ActiveExplorer.Selection.Item(1)
        If (TypeOf selectedItem Is Outlook.MailItem) Then
            Set selected = selectedItem
            Set GetSelectedMail = selected
        End If
    End If
End Function

Private Function CreateTaskForMail(mail As Outlook.MailItem) As Outlook.TaskItem
    Dim olTsk As Outlook.TaskItem
    'To Move an item programmatically, this does not help the EntryID problem
    'Since we get the myItem before moving and it returns us the old EntryID
    'Set ns = Application.GetNamespace("MAPI")
    'Dim moveToFolder As Outlook.MAPIFolder
    'Set moveToFolder = ns.Folders("ozgur.yuksel@lmsintl.com").Folders("Inbox").Folders("Processed")
    'myItem.Move moveToFolder
    
    Set olTsk = CreateItem(olTaskItem)
     
    With olTsk
        .Subject = mail.Subject
        '.StartDate = Now()
        .Body = .Body & vbCrLf & "=== SOURCE E-MAIL INFORMATION ==="
        .Body = .Body & vbCrLf & "Subject: " & mail.Subject
        .Body = .Body & vbCrLf & "From: " & mail.Sender
        .Body = .Body & vbCrLf & "To: " & mail.To
        .Body = .Body & vbCrLf & "Sent on: " & mail.SentOn
        'This EntyID is automatically updated each time myItem is moved from one folder to another
        'So it is not a reliable link. We can move the item to the final destination first and then
        'Start getting the link. This way, at least it is archived it will work
        .Body = .Body & vbCrLf & "url:outlook:" & mail.EntryID & vbCrLf
        .Save
    End With
    Set CreateTaskForMail = olTsk
End Function




'
' MOVE EXISTING TASK COMMANDS
'

Sub AddTaskToActionList()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = GetSelectedTask()
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    AddGivenTaskToActionList selectedTask
End Sub

Sub AddGivenTaskToActionList(task As Outlook.TaskItem)
    With task
        .Status = olTaskNotStarted
        .StartDate = Now()
        .DueDate = .StartDate
        .ReminderSet = False
        .Save
    End With
End Sub


Sub AddTaskToWaitingList()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = GetSelectedTask()
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    AddGivenTaskToWaitingList selectedTask
End Sub

Sub AddGivenTaskToWaitingList(task As Outlook.TaskItem)
    With task
        .Status = olTaskWaiting
        .StartDate = "1/1/4501"
        .DueDate = "1/1/4501"
        .Save
    End With
End Sub


Sub AddTaskToIncubationList()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = GetSelectedTask()
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    AddGivenTaskToIncubationList selectedTask
End Sub

Sub AddGivenTaskToIncubationList(task As Outlook.TaskItem)
    With task
        .Status = olTaskDeferred
        .StartDate = "1/1/4501"
        .DueDate = "1/1/4501"
        .Save
    End With
End Sub


Sub AddTaskToMasterList()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = GetSelectedTask()
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    AddGivenTaskToMasterList selectedTask
End Sub

Sub AddGivenTaskToMasterList(task As Outlook.TaskItem)
    With task
        .Status = olTaskNotStarted
        .StartDate = "2/2/3000"
        .DueDate = "2/2/3000"
        .Save
    End With
End Sub


Private Function GetSelectedTask() As Outlook.TaskItem
    Dim selected As Outlook.TaskItem
    If ActiveExplorer.Selection.Count > 0 Then
        Set selectedItem = ActiveExplorer.Selection.Item(1)
        If (TypeOf selectedItem Is Outlook.TaskItem) Then
            Set selected = selectedItem
            Set GetSelectedTask = selected
        End If
    End If
End Function

'
' Create new Action Item from Selected Task
'
Sub CreateNewActionItemFromSelectedTask()
    Dim selectedTask As Outlook.TaskItem
    Set selectedTask = GetSelectedTask()
    If selectedTask Is Nothing Then
        MsgBox "You need to select a task to execute this command"
        Exit Sub
    End If
    
    Dim newTask As Outlook.TaskItem
    Set newTask = CreateItem(olTaskItem)
     
    With newTask
        .Subject = selectedTask.Subject
        '.StartDate = Now()
        .Body = .Body & vbCrLf & "=== SOURCE TASK INFORMATION ==="
        .Body = .Body & vbCrLf & "Subject: " & selectedTask.Subject
        'This EntyID is automatically updated each time myItem is moved from one folder to another
        'So it is not a reliable link. We can move the item to the final destination first and then
        'Start getting the link. This way, at least it is archived it will work
        .Body = .Body & vbCrLf & "url:outlook:" & selectedTask.EntryID & vbCrLf
        .Save
    End With
    
    AddGivenTaskToActionList newTask
    newTask.Display
End Sub
